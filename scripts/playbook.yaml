---
- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    keypair: id_rsa
    instance_type: t2.micro
    image: ami-5ab5063a
    region: us-west-2
  tasks:
    - name: Launch Instance
      ec2:
         key_name: "{{ keypair }}"
         group: default
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         aws_access_key: AKIAJTC2OXJXHQJEMG7A
         aws_secret_key: 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
      register: ec2

    - name: Wait for port 22
      wait_for:
        state: started
        host: "{{ ec2.instances[0].public_ip }}"
        port: 22
        delay: 10
      when: ec2|changed

    - name: Print all ec2 variables
      debug: var=ec2.instances[0].public_ip

    - name: Copy files
      shell: scp -r -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /home/tjs/go/src/stars-app core@{{ ec2.instances[0].public_ip }}:/home/core/

    - name: add host to inventory
      add_host: name={{ ec2.instances[0].public_ip }} groups=newinstances
      with_items: ec2.instances

- name: Set up python
  hosts: newinstances
  remote_user: core
  gather_facts: False
  vars:
    ansible_ssh_user: core
    ansible_python_interpreter: /home/core/bin/python
  roles:
    - defunctzombie.coreos-bootstrap
  tasks:
    - name: Building docker files
      shell: 
        cmd: docker build -t stars-app .
        chdir: /home/core/stars-app

    - name: Run the image
      shell: docker run -d -p 443:8587 stars-app nohup go run main.go
